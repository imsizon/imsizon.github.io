<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>萨内蒂的小跟班的Blog</title><link href="https://imsizon.com/" rel="alternate"></link><link href="https://imsizon.com/feeds/java.atom.xml" rel="self"></link><id>https://imsizon.com/</id><updated>2010-01-20T02:53:00+08:00</updated><entry><title>今天发现的WebSphere的问题，貌似比较少见</title><link href="https://imsizon.com/2010/01/20/Today-the-problems-found-in-WebSphere-seemingly-more-rare/" rel="alternate"></link><updated>2010-01-20T02:53:00+08:00</updated><author><name>萨内蒂的小跟班</name></author><id>tag:imsizon.com,2010-01-20:2010/01/20/Today-the-problems-found-in-WebSphere-seemingly-more-rare/</id><summary type="html">&lt;p&gt;&lt;p&gt;今天通过StartServer.bat启动某项目的WebSphere服务时，进程执行到“服务已启动，等待状态初始化”时就假死卡住不动了，按照正常步骤下面会提示“已开放电子商务端口XXX，进程ID XXX”，加上查看系统的应用程序日志也看到了熟悉的“Could not determine the process id of the java process.Changing the IBMWAS5Service - Tivoli Agent Manager service status to the "stopped" state. To prevent this error, try recreating this service with the -logRoot parameter. The value of the logRoot parameter should be the directory in which the server's .pid file is created. ”错误，于是以为Websphere又在抽风了。&lt;/p&gt; &lt;p&gt;按照往常经验，首先检查启动时java.exe的进程数，正常，再检查数据库链接，正常，检查logs目录下面的一坨日志，也没有报任何错误，甚至还能看到应用正常启动时log4j打印的日志，重启服务器，重启服务，依然是卡在那一步。一边折腾，一边google其他处理方案，3个人折腾了3、4个小时，依然未果。&lt;/p&gt; &lt;p&gt;就在准备重装Websphere之前，抱着死马当活马医的心态把应用安装目录的文件夹名字改了一下重启服务，Websphere报了一下找不到应用路径之后居然神奇的启动起来了。这下赶紧检查应用是不是出了什么问题，在本地用tomcat一加载，发现居然是合作公司的webservice接口服务当掉了，tomcat很干脆的就报了一个wsdl文件无法解析和连接超时的错误。项目使用的是xfire结合spring调用对方的Webservice接口，接口类的定义都在spring的配置文件里面，应用启动spring初始化接口类的bean时，由于对方的服务无法访问，websphere既不报错，也不设个timeout的实现，就傻愣愣的卡在那儿。这下几个人狂汗一通，赶紧联系合作公司检查Webservice接口。哎，该说这是Websphere的bug呢，还是说它太强大了呢……&lt;/p&gt; &lt;p&gt;经查，Websphere6.0和Websphere6.1系列都有同样的问题，看到本文的同学在遇到这个问题时赶紧检查检查自己的应用吧。&lt;/p&gt; &lt;/p&gt;</summary></entry><entry><title>自己在WebSphere中发布应用时碰到的问题总结</title><link href="https://imsizon.com/2009/12/23/Their-application-in-WebSphere-published-summary-of-the-problems-encountered/" rel="alternate"></link><updated>2009-12-23T04:33:00+08:00</updated><author><name>萨内蒂的小跟班</name></author><id>tag:imsizon.com,2009-12-23:2009/12/23/Their-application-in-WebSphere-published-summary-of-the-problems-encountered/</id><summary type="html">&lt;p&gt;&lt;p&gt;这两天在发布公司一个项目的测试系统，需要在3台服务器上发布3套应用，使用的环境有Websphere6.0和Websphere6.1，被折腾的快吐血了，总结一下碰到的问题，希望看到的朋友可以处理类似的问题时可以轻松一些。&lt;br /&gt; &lt;/p&gt; &lt;p&gt;1、java.lang.NoClassDefFoundError或者java.lang.VerifyError，这个一般是打包的war中包含的jar与Websphere自带的jar冲突引起的，最常见的是和jdom有关的错误，主要出现在Websphere6.1之前的版本中，因为Websphere6.1之前的版本自带的jdom.jar据说是2001年的了（&lt;span class="Apple-style-span" style="border-collapse:separate;color:#000000;font-family:simsun;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;orphans:2;text-indent:0px;text-transform:none;white-space:normal;widows:2;word-spacing:0px;font-size:medium;"&gt;&lt;span class="Apple-style-span" style="color:#333333;font-family:'lucida grande','lucida sans unicode',helvetica,verdana,arial,sans-serif;font-size:13px;"&gt;The jdom.jar supplied in both WSAD 5.1 and RAD 6 as well as Websphere 5.1 and Websphere 6.x has the size of 106,416. It is the original jdom.jar dating back to 2001 release）&lt;/span&gt;&lt;/span&gt;，来源在&lt;a target="_blank" href="http://fixunix.com/websphere/217283-jdom-problems.html"&gt;这里&lt;/a&gt;。&lt;/p&gt; &lt;p&gt;解决的办法也很简单，一种是直接把{Websphere install path}/lib中有冲突的jar替换成项目中使用的jar；一种是在管理控制台中更改应用程序的类装载策略，将默认的“parent first”改成“parent last”重启Websphere服务即可。其实这两种方法都是为了让Websphere的类装载器首先找到我们需要使用的正确的java类文件，不过策略不同而已。这里就涉及到Websphere的类加载机制了，网上关于这个的文章很多，比如&lt;a target="_blank" href="http://www.webspherechina.net/?540/viewspace-5802.html"&gt;这篇&lt;/a&gt;。&lt;/p&gt; &lt;p&gt;2、Websphere服务启动报错，进程起不来，查看系统的应用程序事件日志的话会看到报错的内容和pid文件有关。这个错误发生的概率相对小一些，主要是在Websphere服务进程异常终止或者是安装补丁包顺序不正确的时候会出现。&lt;/p&gt; &lt;p&gt;第一种情况一般第二次启动就能起起来，而第二种情况的话基本就只能通过重新安装Websphere解决了。当然如果只是这两种情况的话也不至于太让人抓狂了，在Websphere的许可证过期的时候系统日志记录的错误也是这个，这样任你如何重装Websphere也是没法启动服务的。&lt;/p&gt; &lt;p&gt;3、xml验证错误。这种错误主要出现在使用多个文件配置Spring-context时，需要在每个配置文件的root中声明使用的xml namespace。&lt;/p&gt; &lt;p&gt;4、struts2在Websphere6.1下出现404错误。Websphere6.1.5之后都会出现，解决办法是在管理控制台中给应用服务器添加定制属性“com.ibm.ws.webcontainer.invokefilterscompatibility”，值为true，重启服务即可。&lt;/p&gt; &lt;p&gt;关于Websphere的牢骚不想发太多，只引用一位原先在IBM工作的师兄的话，他说他们自己内部都不太乐意使用Websphere的，即使迫不得已用上了，打补丁的时候也是能少打一个版本就少打一个，因为谁也不知道版本更新之后会出什么样的新问题，包括Websphere的开发人员在内。&lt;/p&gt; &lt;p&gt;另外前两天glassfish v3发布正式版了，模块化的JEE组件、对动态语言的支持、优秀的热部署能力等新特性老早就吸引了众多java开发者的注意力，我也不例外，试用了几下，和Websphere一比真是让人内牛满面，后面有空再写写我对glassfish应用的一些想法吧。&lt;br /&gt; &lt;/p&gt; &lt;/p&gt;</summary></entry></feed>